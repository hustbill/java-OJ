## New problems

Sep 6th:

Paint House I

/*

Paint House Total Accepted: 635 Total Submissions: 1767 My Submissions Question Solution

There are a row of n houses, each house can be painted with one of the three colors: red, blue or green. The cost of painting each house with a certain color is different. You have to paint all the houses such that no two adjacent houses have the same color.


The cost of painting each house with a certain color is represented by a n x 3 cost matrix. For example, costs[0][0] is the cost of painting house 0 with color red; costs[1][2] is the cost of painting house 1 with color green, and so on... Find the minimum cost to paint all houses.


Note:

All costs are positive integers.


*/

Paint House II

/*

Paint House II Total Accepted: 535 Total Submissions: 1756 My Submissions Question Solution

There are a row of n houses, each house can be painted with one of the k colors. The cost of painting each house with a certain color is different. You have to paint all the houses such that no two adjacent houses have the same color.


The cost of painting each house with a certain color is represented by a n x k cost matrix. For example, costs[0][0] is the cost of painting house 0 with color 0; costs[1][2] is the cost of painting house 1 with color 2, and so on... Find the minimum cost to paint all houses.


Note:

All costs are positive integers.


Follow up:

Could you solve it in O(nk) runtime?


*/

Factor Combinations

/*

Factor Combinations Total Accepted: 653 Total Submissions: 2375 My Submissions Question Solution

Numbers can be regarded as product of its factors. For example,


8 = 2 x 2 x 2;

 = 2 x 4.

Write a function that takes an integer n and return all possible combinations of its factors.


Note:

Each combination's factors must be sorted ascending, for example: The factors of 2 and 6 is [2, 6], not [6, 2].

You may assume that n is always positive.

Factors should be greater than 1 and less than n.

Examples:

input: 1

output:

[]

input: 37

output:

[]

input: 12

output:

[

 [2, 6],

 [2, 2, 3],

 [3, 4]

]

input: 32

output:

[

 [2, 16],

 [2, 2, 8],

 [2, 2, 2, 4],

 [2, 2, 2, 2, 2],

 [2, 4, 4],

 [4, 8]

]


*/

Closest Binary Search Tree Value

/*

Closest Binary Search Tree Value Total Accepted: 727 Total Submissions: 2642 My Submissions Question Solution

Given a non-empty binary search tree and a target value, find the value in the BST that is closest to the target.


Note:

Given target value is a floating point.

You are guaranteed to have only one unique value in the BST that is closest to the target.

*/

Closest Binary Search Tree Value II

/*

Closest Binary Search Tree Value II Total Accepted: 318 Total Submissions: 1162 My Submissions Question Solution

Given a non-empty binary search tree and a target value, find k values in the BST that are closest to the target.


Note:

Given target value is a floating point.

You may assume k is always valid, that is: k â‰¤ total nodes.

You are guaranteed to have only one unique set of k values in the BST that are closest to the target.

Follow up:

Assume that the BST is balanced, could you solve it in less than O(n) runtime (where n = total nodes)?


*/

6. Paint Fence

/*

There is a fence with n posts, each post can be painted with one of the k colors.

You have to paint all the posts such that no more than two adjacent fence posts have the same color.

Return the total number of ways you can paint the fence

Note:

n and k are non-negative integers.


*/


